package org.example;

import org.example.model.DataCreatorRequestDto;

import java.io.IOException;
import java.util.Random;

import static java.lang.Math.*;


public class Main
{
    public static void main(String[] args) throws IOException {

        DataCreatorRequestDto request = new DataCreatorRequestDto(
                100,
                -100,
                100,
                -3.14,
                3.14,
                0.1,
                "function1.dat"
        );

        DataCreator.createDataFotOneParam(new FunctionOne(request, 2));
        TinyGpExtended tinyGpExtended = new TinyGpExtended("src/main/resources/function1.dat", -1);
        tinyGpExtended.evolve();

//        var function = "(((-60.64784700169798 * (((X1  + ((((33.20606121356829 * X1 ) cos( 39.554564770079736) - 57.563538575860946) cos( (57.73219689575288 / -86.170976602464))) * ((((((((39.80088041524547 cos( 49.84334502118119) sin( (((-16.940228571144658 - (((((-80.65396623245994 sin( -12.304792281872977) - -60.64784700169798) / ((68.15663963571413 / 70.89376295832795) sin( ((((-92.65069230199812 * -59.0130899847298) * (-11.327811522921394 + 68.15663963571413)) * (-97.91034111141698 + 60.920347679594784)) cos( (-12.304792281872977 * ((-59.0130899847298 sin( 19.12325888469732) cos( -64.46515880318728))))) + -12.304792281872977) * 90.43218734785674)) + (-44.83871471420413 cos( (-69.61043450047384 / -22.075008968135393))) / ((-11.327811522921394 / 13.548697347845604) sin( -73.11829730038251))) sin( ((((-80.65396623245994 cos( (-60.64784700169798 * 10.311040769055396)) - ((79.57018421215287 + -44.83871471420413) sin( (((79.57018421215287 cos( (-80.65396623245994 sin( (((((39.554564770079736 + (-44.83871471420413 cos( X1 )) + 49.84334502118119) sin( ((-60.64784700169798 * (((X1  + (((X1  cos( 39.554564770079736) * 57.563538575860946) cos( (57.73219689575288 / -86.170976602464))) * ((-16.940228571144658 cos( (-25.219628328910872 - (-18.798346229001183 - (77.0138029074721 * (10.34889640890637 - -3.0749723177722785))))) sin( 72.60291155259125)) sin( (((-22.075008968135393 + -33.76007282952878) + 90.43218734785674) * ((((-73.11829730038251 * X1 ) / ((((((-92.32430584596074 sin( (-84.22389313525294 - (((99.45619762136181 / 49.303329503914) + -22.075008968135393) * X1 ))) * X1 ) * -7.367036914899302) cos( (16.1893942117555 * -92.32430584596074)) cos( (-22.075008968135393 * (3.975965445641421 * -80.65396623245994))) / (-44.83871471420413 cos( -59.0130899847298))) * ((-69.61043450047384 cos( -80.65396623245994) + X1 )) / -0.41717702965490844)))) / (((79.57018421215287 cos( 72.60291155259125) + ((((15.164623852540089 sin( -39.89371711787524) sin( -54.25034575659109) / (36.30203457577207 + -92.32430584596074)) cos( ((-4.1816471786401195 - X1 ) sin( 84.97758788548273))) sin( -73.11829730038251))) * -18.798346229001183) sin( 63.78043206568802))) + (-25.219628328910872 cos( ((28.88641463235973 sin( ((72.60291155259125 + 71.85637356548474) sin( 67.96770423000734)) / (61.074576852818694 / -80.65396623245994)))) + (48.82534068010952 sin( -22.075008968135393)))) / ((((-60.64784700169798 * (((-6.645563986959971 + (67.96770423000734 cos( (57.73219689575288 / -90.329949266676))) * (((49.303329503914 sin( -59.0130899847298) cos( (-25.219628328910872 - ((((-90.329949266676 cos( 28.34683370606598) * (-18.798346229001183 cos( -16.019730873105615)) / (39.80088041524547 / (98.3348397328293 cos( X1 ))) - X1 ))) sin( 72.60291155259125)) sin( ((((-60.64784700169798 * (((X1  + (((X1  cos( 39.554564770079736) - X1 ) cos( (57.73219689575288 / -86.170976602464))) * ((79.57018421215287 cos( (-25.219628328910872 - (-11.051732374108354 sin( (-16.940228571144658 * (-59.0130899847298 / ((13.547378107915293 / 9.70104068206659) sin( ((X1  + -91.05685399198371) - (97.85063416370653 cos( -60.64784700169798)))))))) sin( 72.60291155259125)) sin( (((((X1  * -60.64784700169798) / -3.0749723177722785) + 61.074576852818694) sin( 90.43218734785674) * 57.563538575860946))) sin( -4.1816471786401195) / (-84.22389313525294 + -69.61043450047384)) * (((-86.170976602464 * -4.1816471786401195) cos( 57.563538575860946) sin( -92.32430584596074)))) sin( ((((((15.164623852540089 - -39.89371711787524) sin( -54.25034575659109) sin( (36.30203457577207 sin( -92.32430584596074)) cos( ((-4.1816471786401195 sin( X1 ) sin( 84.97758788548273)) + 71.85637356548474) sin( 67.96770423000734)) / (((-64.46515880318728 sin( (((((-91.05685399198371 * 9.70104068206659) * 67.55457321410299) + 67.96770423000734) cos( X1 ) * (-4.1816471786401195 - X1 ))) sin( (((85.54532113102451 + X1 ) + (99.45619762136181 sin( 36.30203457577207)) cos( (-2.2199000241771074 / (71.85637356548474 * 71.85637356548474)))) + -94.23256590674222)) * -60.64784700169798)) * 63.78043206568802)) sin( -86.170976602464) + -22.075008968135393) sin( 3.975965445641421) / (-25.219628328910872 sin( (-18.798346229001183 - (-16.940228571144658 * -22.075008968135393)))) - 72.60291155259125)) sin( (((X1  + -2.2199000241771074) + -60.64784700169798) * -7.367036914899302))) / (48.82534068010952 sin( (-64.46515880318728 / -69.61043450047384))) / (X1  + 97.85063416370653))";
//        ExcelConverter excelConverter = new ExcelConverter();
//        excelConverter.parseFunctionToExcel(function, -10, 10 ,0.1, new FunctionOne(request, 20));
//
//        ResultsOptimizer optimizer = new ResultsOptimizer();
//        System.out.println(optimizer.optimize(function));
    }
}